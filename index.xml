<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on 野生菌のBlog</title><link>/</link><description>Recent content in Home on 野生菌のBlog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 28 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang三色标记+GC混合写屏障机制</title><link>/post/golang_gc/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>/post/golang_gc/</guid><description>Golang三色标记+GC混合写屏障机制 Go v1.3 之前的标记清除法（mark and weep） GC ：Garbage Collection 垃圾回收 STW ：Stop the world &amp;mdash;</description></item><item><title>Linux及shell相关指令学习笔记</title><link>/post/shell/</link><pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate><guid>/post/shell/</guid><description>Linux ctrl + alt + f1~f6 进入真正shell终端控制台 ctrl + alt + f7 图形化界面 ctrl + / ctl - 放大缩小 ls pwd linux 只有一棵树 cd / 切换到根目录 根目录下的文件夹说明 /bin : 存放可</description></item><item><title>k8s中grpc负载不均衡的问题</title><link>/post/grpc-http2/</link><pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate><guid>/post/grpc-http2/</guid><description>1. gRPC gRPC是由google开发的，是一款语言中立、平台中立、开源的RPC(Remote Procedure Call，远程过程调用)框架。 在gRPC里客户端应</description></item><item><title>高危端口及解决方案</title><link>/post/port/</link><pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate><guid>/post/port/</guid><description>135端口 端口介绍 在 Windows 默认的五个典型开放端口中，135 用途最为复杂，也最容易引起外部攻击。主要用于使用RPC（远程过程调用）协议并提供DCO</description></item><item><title>详解Redis缓存穿透、击穿、雪崩原理及解决方法</title><link>/post/my-first-post/</link><pubDate>Wed, 08 Jun 2022 10:17:12 +0800</pubDate><guid>/post/my-first-post/</guid><description>&lt;p>在实际的项目开发中，用户的数据我们一般都使用数据库进行存储，其数据是存储在磁盘上的，虽然稳定，但I/O速度很慢，当用户量很多且有并发需求时，请求数量一上来数据库就很容易崩溃。&lt;/p></description></item><item><title>如何用Hugo搭建自己的个人博客(GithubPages + Aliyun)</title><link>/post/hugo-blog-make/</link><pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate><guid>/post/hugo-blog-make/</guid><description>个人博客有许多开源的框架，基于Go语言的Hugo框架有着快速方便的特点，且支持Markdown语法，利用它来构建博客可以大大提高我们的效率。</description></item><item><title>Markdown语法手册</title><link>/post/markdown-syntax/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>/post/markdown-syntax/</guid><description>&lt;p>本文提供了一个可以在 &lt;code>Hugo&lt;/code> 内容文件中使用的基本Markdown语法示例，还展示了基本 HTML 元素在 &lt;code>Hugo&lt;/code> 主题中是否使用 &lt;code>CSS&lt;/code> 装饰。&lt;/p></description></item><item><title>富文本内容测试</title><link>/post/rich-content/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>/post/rich-content/</guid><description>&lt;p>Hugo 上有几个&lt;a href="https://gohugo.io/content-management/shortcodes/#use-hugos" target="_blank" rel="noopener">&lt;strong>内置短码&lt;/strong>&lt;/a>
，用于丰富内容，以及&lt;a href="https://gohugo.io/about/hugo-and-gdpr/" target="_blank" rel="noopener">&lt;strong>隐私配置&lt;/strong>&lt;/a>
还有一组简单的短代码，支持各种社交媒体嵌入的静态和非 JS 版本。&lt;/p></description></item><item><title>图像占位符显示</title><link>/post/placeholder-text/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>/post/placeholder-text/</guid><description>&lt;p>范德格拉夫原理（Van de Graaf Canon）重构了曾经用于书籍设计中将页面划分为舒适比例的方法。这一原理也被称为“秘密原理”，用于许多中世纪的手稿和古板书中。在范德格拉夫原理中，文本区域和页面的长款具有相同的比例，并且文本区域的高度等于页面宽度，通过划分页面得到九分之一的订口边距和九分之二的切口边距，以及与页面长宽相同的比例的文本区域。&lt;/p></description></item><item><title>数据公式设置显示</title><link>/post/math-typesetting/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>/post/math-typesetting/</guid><description>&lt;p>Hugo 项目中的数学表示法可以通过使用第三方 JavaScript 库来实现。&lt;/p></description></item><item><title>支持Emoji表情符号</title><link>/post/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>/post/emoji-support/</guid><description>&lt;p>&lt;code>Emoji&lt;/code> 表情符号可以通过多种方式在 &lt;code>Hugo&lt;/code> 项目中启用。&lt;/p></description></item><item><title>关于我</title><link>/about.html</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>/about.html</guid><description>Hugo是用Go编写的一个开放源代码静态站点生成器，可在Apache许可证2.0 下使用。 Hugo支持TOML, YAML和JSON数据文件类型</description></item><item><title/><link>/post/prometheus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/prometheus/</guid><description/></item></channel></rss>